# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import uavdesign_pb2 as uavdesign__pb2


class DesignAssessStub(object):
  """Services define the different communication scenarios available
  A simple service for evaluating drone designs

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetUAVPerformance = channel.unary_unary(
        '/protodesign.DesignAssess/GetUAVPerformance',
        request_serializer=uavdesign__pb2.UAVDesign.SerializeToString,
        response_deserializer=uavdesign__pb2.Results.FromString,
        )


class DesignAssessServicer(object):
  """Services define the different communication scenarios available
  A simple service for evaluating drone designs

  """

  def GetUAVPerformance(self, request, context):
    """Assess a uav design on each request
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DesignAssessServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetUAVPerformance': grpc.unary_unary_rpc_method_handler(
          servicer.GetUAVPerformance,
          request_deserializer=uavdesign__pb2.UAVDesign.FromString,
          response_serializer=uavdesign__pb2.Results.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protodesign.DesignAssess', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
